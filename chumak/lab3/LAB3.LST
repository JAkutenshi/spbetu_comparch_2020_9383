Microsoft (R) Macro Assembler Version 5.10                  11/10/20 23:46:2
                                                             Page     1-1


 0000				AStack SEGMENT STACK
 0000  0020[				DW 32 DUP(?)
	   ????			
			 ]	
				
 0040				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0002			a	DW	2
 0002  0001			b	DW	1
 0004  0002			i	DW	2
 0006  0001			k	DW	1
 0008  0000			i1	DW	?
 000A  0000			i2	DW	?
 000C  0000			res	DW	?
 000E				DATA ENDS
				
 0000				CODE SEGMENT
					ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				Main PROC FAR
 0000  B8 ---- R			mov ax, DATA
 0003  8E D8				mov ds, ax
 0005				f1_1:
 0005  A1 0000 R			mov ax, a
 0008  3B 06 0002 R			cmp ax, b
 000C  7F 16				jg f1_2	;–µ—Å–ª–∏ a > b, —Ç–æ –ø–µ—Ä–µ—
				Ö–æ–¥–∏–º –∫ f1_2
							;–∏–Ω–∞—á–µ a <= b, –≤—
				ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–∞–ª—å—à–µ
 000E  A1 0004 R			mov ax, i
 0011  D1 E0				shl ax, 1	;ax = 2*i
 0013  8B D8				mov bx, ax	;bx = 2*i
 0015  D1 E0				shl ax, 1	;ax = 4*i
 0017  03 C3				add ax, bx	;ax = 6*i
 0019  2D 0006				sub ax, 6	;ax = 6*i-6
 001C  F7 D8				neg ax		;ax = -(6*i-6)
 001E  A3 0008 R			mov i1, ax
 0021  EB 10 90				jmp f2_1
 0024				f1_2:
 0024  A1 0004 R			mov ax, i
 0027  D1 E0				shl ax, 1	;ax = 2*i
 0029  D1 E0				shl ax, 1	;ax = 4*i
 002B  F7 D8				neg ax		;ax = -4*i
 002D  05 0014				add ax, 20	;ax = -4*i+20, —á—Ç–æ –
				∏–¥–µ–Ω—Ç–∏—á–Ω–æ 20-4*i
 0030  A3 0008 R			mov i1, ax
 0033				f2_1:
 0033  A1 0000 R			mov ax, a
 0036  3B 06 0002 R			cmp ax, b
 003A  7F 14				jg f2_2	;–µ—Å–ª–∏ a > b, —Ç–æ –ø–µ—Ä–µ—
				Ö–æ–¥–∏–º –∫ f2_2
							;–∏–Ω–∞—á–µ a <= b, –≤—
				ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–∞–ª—å—à–µ
Microsoft (R) Macro Assembler Version 5.10                  11/10/20 23:46:2
                                                             Page     1-2


 003C  A1 0004 R			mov ax, i
 003F  8B D8				mov bx, ax
 0041  D1 E0				shl ax, 1	;ax = 2*i
 0043  03 C3				add ax, bx	;ax = 3*i
 0045  F7 D8				neg ax		;ax = -(3*i)
 0047  05 0002				add ax, 2	;ax = -(3*i)+2, —á—Ç–æ 
				–∏–¥–µ–Ω—Ç–∏—á–Ω–æ 2-3*i
 004A  A3 000A R			mov i2, ax
 004D  EB 0C 90				jmp f3
 0050				f2_2:
 0050  A1 0004 R			mov ax, i
 0053  D1 E0				shl ax, 1	;ax = 2*i
 0055  2D 0002				sub ax, 2	;ax = 2*i-2
 0058  A3 000A R			mov i2, ax
 005B				f3:
 005B  A1 0006 R			mov ax, k
 005E  83 3E 0006 R 00			cmp k, 0
 0063  7C 13				jl f3_1	;–µ—Å–ª–∏ k < 0, —Ç–æ –ø–µ—Ä–µ—
				Ö–æ–¥–∏–º –∫ f3_1
							;–∏–Ω–∞—á–µ k >= 0, –≤—
				ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–∞–ª—å—à–µ
 0065  A1 000A R			mov ax, i2	;ax = i2
 0068  F7 D8				neg ax		;ax = -i2
 006A  3D FFFA				cmp ax, -6
 006D  7F 25				jg f3_res	;–µ—Å–ª–∏ ax > -6, —Ç–æ
				 –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–≤–æ–¥—É -i2
 006F  C7 06 000C R FFFA		mov res, -6	;–∏–Ω–∞—á–µ res = -6
 0075  EB 23 90				jmp f_end
 0078				f3_1:
 0078  A1 0008 R			mov ax, i1	;ax = i1
 007B  2B 06 000A R			sub ax, i2	;ax = i1-i2
 007F  3D 0000				cmp ax, 0	
 0082  7F 02				jg f3_cmp_2	;–µ—Å–ª–∏ ax > 0, —Ç–æ 
				–ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å 2
							;–∏–Ω–∞—á–µ –∏–¥—ë–º –±
				–µ—Ä—ë–º –º–æ–¥—É–ª—å
 0084  F7 D8				neg ax		;ax = -i1+i2
 0086				f3_cmp_2:
 0086  3D 0002				cmp ax, 2
 0089  7C 09				jl f3_res	;–µ—Å–ª–∏ ax < 2, —Ç–æ 
				–ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–≤–æ–¥—É ax
 008B  C7 06 000C R 0002		mov res, 2
 0091  EB 07 90				jmp f_end	
 0094				f3_res:
 0094  A3 000C R			mov res, ax
 0097  EB 01 90				jmp f_end
 009A				f_end:
 009A  B4 4C				mov ah, 4ch
 009C  CD 21				int 21h
 009E				Main	ENDP
 009E				CODE	ENDS
					END Main
Microsoft (R) Macro Assembler Version 5.10                  11/10/20 23:46:2
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0040	PARA	STACK	
CODE . . . . . . . . . . . . . .  	009E	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATA

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATA

F1_1 . . . . . . . . . . . . . .  	L NEAR	0005	CODE
F1_2 . . . . . . . . . . . . . .  	L NEAR	0024	CODE
F2_1 . . . . . . . . . . . . . .  	L NEAR	0033	CODE
F2_2 . . . . . . . . . . . . . .  	L NEAR	0050	CODE
F3 . . . . . . . . . . . . . . .  	L NEAR	005B	CODE
F3_1 . . . . . . . . . . . . . .  	L NEAR	0078	CODE
F3_CMP_2 . . . . . . . . . . . .  	L NEAR	0086	CODE
F3_RES . . . . . . . . . . . . .  	L NEAR	0094	CODE
F_END  . . . . . . . . . . . . .  	L NEAR	009A	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATA
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATA
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATA

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 009E

RES  . . . . . . . . . . . . . .  	L WORD	000C	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  LAB3		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     91 Source  Lines
     91 Total   Lines
     25 Symbols

  47962 + 459298 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
