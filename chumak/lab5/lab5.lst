Microsoft (R) Macro Assembler Version 5.10                  12/9/20 23:41:39
                                                             Page     1-1


 0000				AStack SEGMENT STACK
 0000  0400[				DB 1024 DUP(?)
	   ??			
			 ]	
				
 0400				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0000				keep_cs DW 0			;–¥–ª—è
				 —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–≥–º–µ–Ω—Ç–∞
 0002  0000				keep_ip DW 0			;–∏ —Å–
				º–µ—â–µ–Ω–∏—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0004				DATA ENDS
				
 0000				CODE SEGMENT
				    ASSUME SS:AStack, DS:DATA, CS:CODE
				
 0000				SUBR_INT PROC FAR
 0000  EB 27 90				jmp begin
 0003  0000				int_keep_ss DW 0		;–¥–ª—è
				 —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ
				–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç–∞ —Å—Ç—ç–∫–∞,
 0005  0000				int_keep_sp DW 0		;—É–∫–∞
				–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—ç–∫,
 0007  0000				int_keep_ax DW 0		;—Ä–µ–≥
				–∏—Å—Ç—Ä–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –æ–ø–µ—Ä–
				∞—Ü–∏–π
 0009  0010[				IntStack DW 16 DUP(?)		;–≤–Ω—É
				—Ç—Ä–µ–Ω–Ω–∏–π —Å—Ç—ç–∫
	   ????			
			 ]	
				
 0029				begin:
 0029  2E: 89 26 0005 R			mov int_keep_sp, sp		;–∑–∞–ø
				–æ–º–∏–Ω–∞–µ–º
 002E  2E: A3 0007 R			mov int_keep_ax, ax		;–Ω—É–∂
				–Ω—ã–µ –Ω–∞–º
 0032  8C D0				mov ax, ss			;–Ω–∞—á
				–∞–ª—å–Ω—ã–µ
 0034  2E: A3 0003 R			mov int_keep_ss, ax		;—Ä–µ–≥
				–∏—Å—Ç—Ä—ã
					
 0038  2E: A1 0007 R			mov ax, int_keep_ax
 003C  BC 0029 R			mov sp, OFFSET begin
 003F  B8 ---- R		   	mov ax, seg IntStack
 0042  8E D0				mov ss, ax
					
 0044  50				push ax			;—Å–æ—Ö—Ä–∞–Ω–µ
				–Ω–∏–µ
 0045  52				push dx			;–∏–∑–º–µ–Ω—è–µ
				–º—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
					
 0046  B0 B6				mov al, 10110110b		;—É—Å—Ç
				–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –¥–ª—è
Microsoft (R) Macro Assembler Version 5.10                  12/9/20 23:41:39
                                                             Page     1-2


 0048  E6 43				out 43h, al			;–¥–ª—è
				 2-–≥–æ –∫–∞–Ω–∞–ª–∞
					
 004A  B8 012C				mov ax, 300 			;–æ–ø—Ä
				–µ–¥–µ–ª—è–µ–º –∑–≤—É–∫ —Å –∑–∞–¥–∞–Ω–Ω–æ–π —á–
				∞—Å—Ç–æ—Ç–æ–π
					
 004D  E6 42				out 42h, al			;—É—Å—Ç
				–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫
 004F  8A C4				mov al, ah			;–≤ –ø–
				æ—Ä—Ç
 0051  E6 42				out 42h, al			;–¥–∏–Ω
				–∞–º–∏–∫–∞
					
 0053  E4 61				in al, 61h			;–≤—ã–±
				–æ—Ä —Ä–µ–∂–∏–º–∞
 0055  8A E0				mov ah, al			;—É–ø—Ä
				–∞–≤–ª–µ–Ω–∏—è
 0057  0C 03				or al, 3			;–¥–∏–Ω
				–∞–º–∏–∫–æ–º
 0059  E6 61				out 61h, al			;–≤–∫–ª
				—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
 005B  2B C9				sub cx, cx
 005D				kill_time:
 005D  E2 FE				loop kill_time
 005F  8A C4				mov al, ah
 0061  E6 61				out 61h, al 			;–≤—ã–∫
				–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
 0063  5A				pop dx				;–≤–æ—Å
				—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞ dx
 0064  58				pop ax				;–≤–æ—Å
				—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞ ax
 0065  2E: A3 0007 R			mov int_keep_ax, ax
 0069  2E: 8B 26 0005 R			mov sp, int_keep_sp
 006E  2E: A1 0003 R			mov ax, int_keep_ss
 0072  8E D0				mov ss, ax
 0074  2E: A1 0007 R			mov ax, int_keep_ax
 0078  B0 20				mov al, 20h			;—Ä–∞–∑
				—Ä–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–µ—Ä—ã–≤–∞–
				Ω–∏–π
 007A  E6 20				out 20h, al			;—Å –±–
				æ–ª–µ–µ –Ω–∏–∑–∫–∏–º–∏ —É—Ä–æ–≤–Ω—è–º–∏
 007C  CF				iret				;–∫–æ–Ω
				–µ—Ü –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
				
 007D				SUBR_INT ENDP
				
 007D				MAIN PROC FAR
 007D  1E				push ds
 007E  2B C0				sub ax, ax
 0080  50				push ax
 0081  B8 ---- R			mov ax, DATA
 0084  8E D8				mov ds, ax
					
Microsoft (R) Macro Assembler Version 5.10                  12/9/20 23:41:39
                                                             Page     1-3


 0086  B4 35				mov ah, 35h			;–ø–æ–ª
				—É—á–∞–µ–º –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0088  B0 08				mov al, 08h
 008A  CD 21				int 21h
					
 008C  89 1E 0002 R			mov keep_ip, bx
 0090  8C 06 0000 R			mov keep_cs, es
 0094  1E				push ds
 0095  BA 0000 R			mov dx, offset SUBR_INT
 0098  B8 ---- R			mov ax, seg SUBR_INT
 009B  8E D8				mov ds, ax
					
 009D  B4 25				mov ah, 25h			;—É—Å—Ç
				–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–
				∞–Ω–∏—è
 009F  B0 08				mov al, 08h
 00A1  CD 21				int 21h
					
 00A3  1F				pop ds
 00A4				check_end:
 00A4  B4 01				mov ah, 01h 			;–ø–æ–ª
				—É—á–∞–µ–º —Å–∏–º–≤–æ–ª
 00A6  CD 21				int 21h
 00A8  3C 1B				cmp al, 1bh			;–ø—Ä–æ
				–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞ –Ω–µ –±
				—É–¥–µ—Ç –Ω–∞–∂–∞—Ç ESC
 00AA  74 02				je func_end
 00AC  EB F6				jmp check_end
 00AE				func_end:
 00AE  FA				cli				;–∑–∞–ø
				—Ä–µ—â–∞–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç –≤–Ω–µ—à
				–Ω–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 00AF  1E				push ds
 00B0  8B 16 0002 R			mov dx, keep_ip
 00B4  A1 0000 R			mov ax, keep_cs
 00B7  8E D8				mov ds, ax
					
 00B9  B4 25				mov ah, 25h
 00BB  B0 08				mov al, 08h
 00BD  CD 21				int 21h
					
 00BF  1F				pop ds
 00C0  FB				sti				;—Ä–∞–∑
				—Ä–µ—à–∞–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç –≤–Ω–µ—à
				–Ω–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 00C1  CB				ret
 00C2				MAIN ENDP
				
 00C2				CODE ENDS
				
				END MAIN
Microsoft (R) Macro Assembler Version 5.10                  12/9/20 23:41:39
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0400	PARA	STACK	
CODE . . . . . . . . . . . . . .  	00C2	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0004	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BEGIN  . . . . . . . . . . . . .  	L NEAR	0029	CODE

CHECK_END  . . . . . . . . . . .  	L NEAR	00A4	CODE

FUNC_END . . . . . . . . . . . .  	L NEAR	00AE	CODE

INTSTACK . . . . . . . . . . . .  	L WORD	0009	CODE	Length = 0010
INT_KEEP_AX  . . . . . . . . . .  	L WORD	0007	CODE
INT_KEEP_SP  . . . . . . . . . .  	L WORD	0005	CODE
INT_KEEP_SS  . . . . . . . . . .  	L WORD	0003	CODE

KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA
KILL_TIME  . . . . . . . . . . .  	L NEAR	005D	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	007D	CODE	Length = 0045

SUBR_INT . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 007D

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  LAB5		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    111 Source  Lines
    111 Total   Lines
     20 Symbols

  48004 + 457206 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
