Microsoft (R) Macro Assembler Version 5.10                  12/24/20 13:08:5
                                                             Page     1-1


 0000				AStack SEGMENT STACK
 0000  0400[			  DB 1024 DUP(?)
	   ??			
			 ]	
				
				
 0400				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0000			  KEEP_CS DW 0 ;хранение сегмент
				а
 0002  0000			  KEEP_IP DW 0 ;хранение смещени
				я прерывания
				
 0004				DATA ENDS
				
 0000				CODE SEGMENT
				  ASSUME CS:CODE, DS:DATA, SS:AStack
				
				
 0000				SUBR_INT PROC FAR
				
 0000  E9 0809 R			jmp procedure
					
 0003  0000				KEEP_SS DW 0
 0005  0000			    KEEP_SP DW 0
 0007  0000			    KEEP_AX DW 0
 0009  0400[			    MY_STACK DW 1024 DUP(?)
	   ????			
			 ]	
				
					
 0809					procedure:
 0809  2E: 89 26 0005 R				MOV KEEP_SP, SP
 080E  2E: A3 0007 R				MOV KEEP_AX, AX
 0812  8C D0					MOV AX, SS
 0814  2E: A3 0003 R				MOV KEEP_SS, AX
 0818  2E: A1 0007 R				MOV AX, KEEP_AX
 081C  BC 0809 R				MOV SP, OFFSET procedure
 081F  B8 ---- R				MOV AX, seg MY_STACK
 0822  8E D0					MOV SS, AX
					
 0824  50			    push ax	;сохраняем все из
				меняемые регистры
 0825  52			    push dx
				
				    ; подача звукового сигнЍ
				°ла
 0826				    Sound:
					; Управление высотой Ѝ
				·вука динамика 
 0826  B0 B6			    MOV   AL, 10110110b     ; Канал 2, рЍ
				µжим 2, оба байта
 0828  E6 43			    OUT   43h, AL           ; УстановкЍ
Microsoft (R) Macro Assembler Version 5.10                  12/24/20 13:08:5
                                                             Page     1-2


				° режима для 2-го канала 
 082A  B8 012C			    MOV   AX, 300           ; Выбор выс
				оты звука 
 082D  E6 42			    OUT   42h, AL           ; Включить 
				таймер, который
				                                ; будет в
				ыдавать импульсы на 
				                                ; динамиЍ
				º с заданной частотой
 082F  8A C4			    MOV   AL, AH 
 0831  E6 42			    OUT   42h, AL           ; ЗанесениЍ
				µ высоты звука в порт динаЍ
				¼ика 
 0833  E4 61			    IN    AL, 61h           ; Получить 
				состояние динамика
 0835  8A E0			    MOV   AH, AL            ; И сохрани
				ть его в AH
 0837  0C 03			    OR    AL, 00000011b     ; Установиэ
				ь два младших бита
 0839  E6 61			    OUT   61h, AL           ; Включить 
				динамик	
				
				
 083B  B9 000F				mov cx, 0Fh      ;задержка
 083E  BA 4240			    mov dx, 4240h    ;для корректно
				го
 0841  B4 86			    mov ah, 86h      ;вывода звуков
				ого
 0843  CD 15			    int 15h          ;сигнала
				
				    ; выключаем звук
 0845				    Sound_OFF:
 0845  E2 FE			    loop Sound_OFF
 0847  B0 61			    mov al, 61h
 0849  E6 61			    out 61h, al
				
 084B  5A			    pop dx            ; восстанавлиЍ
				²аем регистры
 084C  58			    pop ax
					
 084D  2E: A3 0007 R			MOV  KEEP_AX, AX
 0851  2E: 8B 26 0005 R		    MOV SP, KEEP_SP
 0856  2E: A1 0003 R		    MOV AX, KEEP_SS
 085A  8E D0			    MOV SS, AX
 085C  2E: A1 0007 R		    MOV AX, KEEP_AX
					
 0860  B0 20			    mov al, 20h ; разрешение обра
				ботки прерываний
 0862  E6 20			    out 20h, al ; более низкого уэ
				овня
				
 0864  CF			    iret        ; конец прерывани
				я
 0865				  SUBR_INT ENDP
Microsoft (R) Macro Assembler Version 5.10                  12/24/20 13:08:5
                                                             Page     1-3


				
 0865				MAIN PROC FAR
 0865  B8 ---- R		  mov ax, DATA
 0868  8E D8			  mov ds, ax
				
 086A  B4 35			  mov ah, 35h           ; ф-ия получеЍ
				½ия вектора
 086C  B0 1C			  mov al, 1Ch           ; номер преры
				вания
 086E  CD 21			  int 21h
				
 0870  89 1E 0002 R		  mov KEEP_IP, bx       ; запомнили с
				мещение
 0874  8C 06 0000 R		  mov KEEP_CS, es       ; запомнили с
				егмент вектора прерываниэ
				
				
 0878  1E			  push ds               ; сохранили ds
				
 0879  B8 ---- R		  mov ax, seg SUBR_INT     ; сегмент пэ
				оцедуры в ax
 087C  BA 0000 R		  mov dx, offset SUBR_INT  ; смещение Ѝ
				¿роцедуры
 087F  8E D8			  mov ds, ax
				
 0881  B4 25			  mov ah, 25h             ; функция ус
				тановки вектора
 0883  B0 1C			  mov al, 1Ch             ; номер вект
				ора
 0885  CD 21			  int 21h                 ; изменение 
				прерывания
 0887  1F			  pop ds                  ; восстанавЍ
				»иваем ds
				
				
 0888				  BUTTON_LOOP:
 0888  B4 00			    mov ah, 00h
 088A  CD 16			    int 16h
 088C  3C 1B			    cmp al, 27
 088E  74 02			    je exit
 0890  E2 F6			    loop BUTTON_LOOP
				
 0892				  exit:
 0892  FA			  CLI
 0893  1E			  push ds
				
 0894  8B 16 0002 R		  mov dx, KEEP_IP     ; восстановилЍ
				¸ смещение для прерывания
 0898  A1 0000 R		  mov ax, KEEP_CS     ; восстановилЍ
				¸ сегмент прерывания
 089B  8E D8			  mov ds, ax
				
 089D  B4 25			  mov ah, 25h         ; функция уста
				новки вектора
Microsoft (R) Macro Assembler Version 5.10                  12/24/20 13:08:5
                                                             Page     1-4


 089F  B0 1C			  mov al, 1Ch         ; номер нашего
				 прерывания
				
 08A1  CD 21			  int 21h             ; изменили пре
				рывания
 08A3  1F			  pop ds
				
 08A4  FB			  STI
				
 08A5  B4 4C			  mov ah, 4ch
 08A7  CD 21			  int 21h
				
 08A9				MAIN ENDP
 08A9				CODE ENDS
				END MAIN 
Microsoft (R) Macro Assembler Version 5.10                  12/24/20 13:08:5
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0400	PARA	STACK	
CODE . . . . . . . . . . . . . .  	08A9	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0004	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BUTTON_LOOP  . . . . . . . . . .  	L NEAR	0888	CODE

EXIT . . . . . . . . . . . . . .  	L NEAR	0892	CODE

KEEP_AX  . . . . . . . . . . . .  	L WORD	0007	CODE
KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA
KEEP_SP  . . . . . . . . . . . .  	L WORD	0005	CODE
KEEP_SS  . . . . . . . . . . . .  	L WORD	0003	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	0865	CODE	Length = 0044
MY_STACK . . . . . . . . . . . .  	L WORD	0009	CODE	Length = 0400

PROCEDURE  . . . . . . . . . . .  	L NEAR	0809	CODE

SOUND  . . . . . . . . . . . . .  	L NEAR	0826	CODE
SOUND_OFF  . . . . . . . . . . .  	L NEAR	0845	CODE
SUBR_INT . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 0865

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lab		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    132 Source  Lines
    132 Total   Lines
     21 Symbols

  48034 + 457176 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
