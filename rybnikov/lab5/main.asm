; ___________________________________________________________________________
; Задание: 60h - прерывание пользователя - должно генерироваться в программе |
;                выдача звукого сигнала (действие, реализуемое               |
;                программой обработки прерывания)                            |
; ___________________________________________________________________________|
AStack SEGMENT STACK
  db 256 DUP(?)

AStack ENDS

DATA SEGMENT
  KEEP_CS DW 0 ;хранение сегмента
  KEEP_IP DW 0 ;хранение смещения прерывания

DATA ENDS

CODE SEGMENT
  ASSUME CS:CODE, DS:DATA, SS:AStack

  ; ___________________________________________________________________________
SUBR_INT PROC FAR
    push ax
    push dx

    ; подача звукового сигнала
    Sound:
    mov al, 10110110b ; управляющее слово таймера: канал 2, режим 3, двоич.слово
    out 43h, al       ; вывод в регистр режима
    mov ax, 777       ; частота звука

    out 42h, al       ; младший байт счетчика
    mov al, ah
    out 42h, al       ; старший байт счетчика

    in al, 61h        ; порт PB
    mov ah, al
    or al, 3          ; устанавливаем биты 0-1
    out 61h, al
    sub cx, cx

    ; выключаем звук
    Sound_OFF:
    loop Sound_OFF
    mov al, 61h
    out 61h, al


    pop dx            ; восстанавливаем регистры
    pop ax

    mov al, 20h ; разрешение обработки прерываний
    out 20h, al ; более низкого уровня


    iret        ; конец прерывания
  SUBR_INT ENDP


  ; ___________________________________________________________________________


  ; ---------------------------------------
MAIN PROC FAR
  mov ax, DATA
  mov ds, ax

  mov ah, 35h           ; ф-ия получения вектора
  mov al, 60h           ; номер прерывания
  int 21h

  mov KEEP_IP, bx       ; запомнили смещение
  mov KEEP_CS, es       ; запомнили сегмент вектора прерывания

  push ds               ; сохранили ds

  mov ax, seg SUBR_INT     ; сегмент процедуры в ax
  mov dx, offset SUBR_INT  ; смещение процедуры
  mov ds, ax

  mov ah, 25h             ; функция установки вектора
  mov al, 60h             ; номер вектора
  int 21h                 ; изменение прерывания
  pop ds                  ; восстанавливаем ds


  int 60h                ; наше прерывания
  ; ---------------------------------------


  CLI
  push ds

  mov dx, KEEP_IP     ; восстановили смещение для прерывания
  mov ax, KEEP_CS     ; восстановили сегмент прерывания
  mov ds, ax

  mov ah, 25h         ; функция установки вектора
  mov al, 60h         ; номер нашего прерывания

  int 21h             ; изменили прерывания
  pop ds

  STI

  mov ah, 4ch
  int 21h

MAIN ENDP
CODE ENDS
END MAIN
